#!/bin/bash

# Git pre-commit hook to check Go formatting
# This hook runs before each commit to ensure code quality

set -e

echo "Running pre-commit checks..."

# Check if we have Go files being committed
if git diff --cached --name-only | grep -q '\.go$'; then
    echo "Checking Go formatting..."
    
    # Save the current directory
    REPO_ROOT=$(git rev-parse --show-toplevel)
    cd "$REPO_ROOT"
    
    # Run formatting checks only on staged Go files
    STAGED_GO_FILES=$(git diff --cached --name-only --diff-filter=ACM | grep '\.go$' || true)
    
    if [ -n "$STAGED_GO_FILES" ]; then
        # Check if goimports is installed
        if ! command -v goimports >/dev/null 2>&1; then
            echo "Warning: goimports not found. Installing..."
            go install golang.org/x/tools/cmd/goimports@latest
        fi
        
        # Check formatting on staged files
        UNFORMATTED_GO=$(echo "$STAGED_GO_FILES" | xargs gofmt -l)
        if [ -n "$UNFORMATTED_GO" ]; then
            echo "Error: The following files are not properly formatted:"
            echo "$UNFORMATTED_GO"
            echo ""
            echo "Run 'make fmt' to fix formatting issues."
            exit 1
        fi
        
        # Check import ordering on staged files
        UNFORMATTED_IMPORTS=$(echo "$STAGED_GO_FILES" | xargs goimports -l)
        if [ -n "$UNFORMATTED_IMPORTS" ]; then
            echo "Error: The following files have incorrect import ordering:"
            echo "$UNFORMATTED_IMPORTS"
            echo ""
            echo "Run 'make fmt' to fix import ordering."
            exit 1
        fi
        
        echo "✓ Go formatting checks passed"
    fi
fi

# Check for large files
MAX_SIZE=5242880  # 5MB in bytes
for file in $(git diff --cached --name-only); do
    if [ -f "$file" ]; then
        size=$(wc -c < "$file")
        if [ "$size" -gt "$MAX_SIZE" ]; then
            echo "Error: File $file is larger than 5MB ($size bytes)"
            echo "Consider using Git LFS for large files"
            exit 1
        fi
    fi
done

echo "✓ All pre-commit checks passed"